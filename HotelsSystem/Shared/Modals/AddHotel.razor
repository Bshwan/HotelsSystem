@inject IStringLocalizer<App> L;
<MudDialog ClassActions="px-5 pb-4" >
    
    <DialogContent>
        <MudTabs @bind-ActivePanelIndex="SelectedTab" Elevation="0" Color="Color.Primary" Rounded="true" ApplyEffectsToContainer="true" PanelClass="py-3">
            <MudTabPanel Text="@L["hotel-info"]">
                <MudForm @ref="AddHotelForm">
                <div class="row gy-3 gx-2">
                    <div class="col-12">
                        <MudTextField OnlyValidateIfDirty="true" Required="true" Margin="@Margin.Dense" @bind-Value="SelectedHotel.htl_Name" Label="@L["name"]" Variant="Variant.Outlined"></MudTextField>
                    </div>
                    <div class="col-12">
                        <MudSelect OnlyValidateIfDirty="true" Required="true" RequiredError="@L["required"]"
                        Validation="@(new Func<HotelTypesComboBox, string>((e)=>e.ValidateField<HotelTypesComboBox>("congltype_ID")))"
                             ToStringFunc="@(e=>e==null?"":e.congltype_Name)" 
                            Value="@(new HotelTypesComboBox{congltype_ID=SelectedHotel.htl_TypeID,congltype_Name=combos.HotelTypes.SelectByID<HotelTypesComboBox>(SelectedHotel.htl_TypeID,"congltype_ID").congltype_Name})"
                            ValueChanged="OnHotelTypeChange" 
                                Margin="@Margin.Dense" T="HotelTypesComboBox" Label="@L["hotel-type"]" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                            @foreach (var item in combos.HotelTypes)
                            {
                            <MudSelectItem T="HotelTypesComboBox" Value="@item">@item.congltype_Name (@item.congltype_StarNumber)</MudSelectItem>
                            }
                        </MudSelect>                    
                    </div>
                    <div class="col-12">
                        @* OnlyValidateIfDirty="true" Required="true" *@
                        <MudTextField Margin="@Margin.Dense" @bind-Value="SelectedHotel.htl_Address" Label="@L["full-address"]" Variant="Variant.Outlined" Lines="4"></MudTextField>
                    </div>
                    
                    <div class="col-12 col-lg-6">
                        <MudAutocomplete T="DirectorateInfo" DebounceInterval="ClS_Config.debounce"
                         SearchFunc="@SearchDirectorate"
                         Clearable="true"
                         Required="true"
                         OnlyValidateIfDirty="true"
                         ResetValueOnEmptyText="true"
                         Value="@(new DirectorateInfo(){peo_DirectorateName=SelectedHotel.peo_DirectorateName,peo_DirectorateID=SelectedHotel.htl_DirectorateID})"
                         Text="@SelectedHotel.peo_DirectorateName"
                         Validation="@(new Func<DirectorateInfo, string>((e)=>e.ValidateField<DirectorateInfo>("peo_DirectorateID")))"
                         ValueChanged="@(async(e)=>await OnDirectorateChange(e))"
                         ToStringFunc="@(e=>e==null?"":e.peo_DirectorateName)"
                         CoerceText="@true"
                         CoerceValue="true"
                         Label=@L["directory"]
                         Margin="@Margin.Dense" Dense="true" Variant="Variant.Outlined"
                         AdornmentIcon="@Icons.Material.Rounded.KeyboardArrowDown" IconSize="Size.Small" />
                    </div>
                    <div class="col-12 col-lg-6">
                        <MudAutocomplete T="WorkingPointInfo" DebounceInterval="ClS_Config.debounce"
                         SearchFunc="@SearchWorkpoint"
                         Clearable="true"
                         Required="true"
                         OnlyValidateIfDirty="true"
                         ResetValueOnEmptyText="true"
                         Value="@(new WorkingPointInfo(){wp_workpointName=SelectedHotel.wp_workpointName,wp_ID=SelectedHotel.htl_WorkPointID})"
                         Text="@SelectedHotel.wp_workpointName"
                         Validation="@(new Func<WorkingPointInfo, string>((e)=>e.ValidateField<WorkingPointInfo>("wp_ID")))"
                         ValueChanged="OnWorkpointChange"
                         ToStringFunc="@(e=>e==null?"":e.wp_workpointName)"
                         CoerceText="@true"
                         CoerceValue="true"
                        Label=@L["workplace"]
                         Margin="@Margin.Dense" Dense="true" Variant="Variant.Outlined"
                         AdornmentIcon="@Icons.Material.Rounded.KeyboardArrowDown" IconSize="Size.Small" />
                    </div>
                    <div class="col-12 col-lg-6">
                        <MudNumericField Required Margin="@Margin.Dense" @bind-Value="SelectedHotel.htl_NumberOfRooms" Label="@L["room-number"]" Variant="Variant.Outlined"></MudNumericField >
                    </div>
                    @if(!SelectedHotel.HotelHas0Stars){
                    <div class="col-12">
                            <MudField Label="@L["stars"]" Margin="@Margin.Dense" Variant="Variant.Outlined">
                            <MudRating Disabled @bind-SelectedValue="SelectedHotel.congltype_StarNumber" />
                        </MudField>
                    </div>
                    }
                    <div class="col-12">
                        <MudTextField Margin="@Margin.Dense" @bind-Value="SelectedHotel.htl_Note" Label="@L["note"]" Variant="Variant.Outlined" Lines="4"></MudTextField>
                    </div>
                    <div class="col-12">
                        <MudDivider/>
                    </div>
                </div>
                </MudForm>
            </MudTabPanel>
            @if(SelectedHotel.htl_ID>0){
            <MudTabPanel Text="@L["admin-info"]">
                <MudForm @ref="AddHotelUserForm" class="row gy-3 gx-2">
                    <div class="col-12">
                        <MudTextField Required="true" Margin="@Margin.Dense" @bind-Value="SelectedHotelUser.htlus_Name" Label="@L["username"]" Variant="Variant.Outlined"></MudTextField>
                    </div>
                    <div class="col-12">
                        <MudTextField Required="true" Margin="@Margin.Dense" @bind-Value="SelectedHotelUser.htlus_FullName" Label="@L["full-name"]" Variant="Variant.Outlined"></MudTextField>
                    </div>
                    <div class="col-12">
                            <MudTextField Required="true" autocomplete="new-password" Margin="@Margin.Dense" @bind-Value="SelectedHotelUser.htlus_Password" Label="@L["password"]" InputType="InputType.Password" Variant="Variant.Outlined"></MudTextField>
                    </div>
                    <div class="col-12">
                       <MudSelect OnlyValidateIfDirty="true" Required="true" RequiredError="@L["required"]" ToStringFunc="@(e=>e==null?"":e.htlustype_Name)" 
                            Value="@(new HotelUserTypeComboBox{htlustype_ID=SelectedHotelUser.htlus_TypeID,htlustype_Name=AddUserCombos.HotelUserTypes.SelectByID<HotelUserTypeComboBox>(SelectedHotelUser.htlus_TypeID,"htlustype_ID").htlustype_Name})" 
                                Validation="@(new Func<HotelUserTypeComboBox, string>((e)=>e.ValidateField<HotelUserTypeComboBox>("htlustype_ID")))"
                                ValueChanged="OnSelectedHotelTypeChangeChange"
                                Margin="@Margin.Dense" T="HotelUserTypeComboBox" Label="@L["user-type"]" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                            @foreach (var item in AddUserCombos.HotelUserTypes)
                            {
                            <MudSelectItem T="HotelUserTypeComboBox" Value="@item">@item.htlustype_Name</MudSelectItem>
                            }
                        </MudSelect>
                    </div>
                    <div class="col-12">
                       <MudSelect OnlyValidateIfDirty="true" Required="true" RequiredError="@L["required"]" ToStringFunc="@(e=>e==null?"":e.lang_Name)"
                                       Value="@(new LanguageInfo{lang_ID=SelectedHotelUser.htlus_LanguageID,lang_Name=AddUserCombos.Languages.SelectByID<LanguageInfo>(SelectedHotelUser.htlus_LanguageID,"lang_ID").lang_Name})"
                                       Validation="@(new Func<LanguageInfo, string>((e)=>e.ValidateField<LanguageInfo>("lang_ID")))"
                                ValueChanged="OnSelectedLanguageChange"
                                Margin="@Margin.Dense" T="LanguageInfo" Label="@L["language"]" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                            @foreach (var item in AddUserCombos.Languages)
                            {
                            <MudSelectItem T="LanguageInfo" Value="@item">@item.lang_Name</MudSelectItem>
                            }
                        </MudSelect>
                    </div>
                    <div class="col-12">
                        <MudField Class="dense-true" Margin="Margin.Dense" Variant="Variant.Outlined">
                            <MudCheckBox Size="Size.Small" Label="@L["active"]" @bind-Checked="SelectedHotelUser.htlus_Active" Color="Color.Primary"></MudCheckBox>
                        </MudField>
                    </div>
                    <div class="col-12">
                        <MudDivider/>
                    </div>
                </MudForm>
                    <MudTable T="HotelUsersInfo" @ref="UsersTable" ServerData="@(new Func<TableState,Task<TableData<HotelUsersInfo>>>(GetPaginatedUser))" Elevation="0" Dense="true" Hover="true"
                              OnRowClick="@(async(e)=>await GetHotelUserByUserID(e.Item.htlus_ID))" RowClassFunc="@((e,s)=> "")">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">@L["users"]</MudText>
                            <MudSpacer />
                        </ToolBarContent>
                        <HeaderContent>
                            @if (PaginatedHotelUsers.Items.Any())
                            {

                                <MudTh>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <MudTableSortLabel SortBy="new Func<HotelUsersInfo, object>(x=>x.htlus_Name.ToEmptyOnNull())">@L["name"]</MudTableSortLabel>
                                    </div>
                                </MudTh>
                                <MudTh>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <MudTableSortLabel SortBy="new Func<HotelUsersInfo, object>(x=>x.htlus_FullName.ToEmptyOnNull())">@L["full-name"]</MudTableSortLabel>
                                    </div>
                                </MudTh>

                                <MudTh>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <MudTableSortLabel SortBy="new Func<HotelUsersInfo, object>(x=>x.htlustype_Name.ToEmptyOnNull())">@L["type"]</MudTableSortLabel>
                                    </div>
                                </MudTh>
                                <MudTh>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <MudTableSortLabel SortBy="new Func<HotelUsersInfo, object>(x=>x.htlus_Active)">@L["status"]</MudTableSortLabel>
                                    </div>
                                </MudTh>
                            }
                            else
                            {
                                <div class="mx-3 mb-3 bg-light rounded pa-3 d-flex flex-column justify-center align-center no-data-msg">
                                    <MudIcon Size="Size.Large" Color="Color.Warning" Icon="@Icons.Material.Filled.Warning"></MudIcon>
                                    <MudText Typo="Typo.body1">@L["no-data-available"]</MudText>
                                </div>
                            }

                        </HeaderContent>
                        <RowTemplate>
                            @if (PaginatedHotelUsers.Items.Any())
                            {
                                <MudTd><MudLink Underline="Underline.Always" Color="Color.Info">@context.htlus_Name</MudLink></MudTd>
                                <MudTd>@context.htlus_FullName</MudTd>
                                <MudTd>@context.htlustype_Name</MudTd>
                                <MudTd>
                                    @if (context.htlus_Active)
                                    {
                                        <MudChip Color="Color.Success">@L["active"]</MudChip>
                                    }
                                    else
                                    {
                                        <MudChip Color="Color.Error">@L["inactive"]</MudChip>

                                    }
                                </MudTd>
                            }

                        </RowTemplate>
                        <PagerContent>
                                <MudTablePager />
                        </PagerContent>
                    </MudTable>
            </MudTabPanel>
            }
            @if(SelectedHotel.htl_ID>0){
            <MudTabPanel Text="@L["rooms"]">
                <MudGrid Class="pt-3" Spacing="1">
                    @if(SelectedItems.Count<=1){
                     <MudItem sm="5">
                        <MudTextField InputType="InputType.Text" Margin="Margin.Dense" @bind-Value="@SelectedHotelRoom.htr_Detail" Label="@L["detail"]" Variant="Variant.Outlined"/>
                    </MudItem>
                    }
                    
                    <MudItem sm="5">
                        <MudAutocomplete @ref="RoomTypeAutocomplete" T="HotelRoomsTypesInfo" DebounceInterval="ClS_Config.debounce"
                         SearchFunc="@SearchRoomType"
                         Clearable="true"
                         ResetValueOnEmptyText="true"
                         Value="@(new HotelRoomsTypesInfo(){cfg_HTR_ID=SelectedHotelRoom.htr_Type,cfg_HTR_Type=SelectedHotelRoom.cfg_HTR_Type,cfg_HTR_Price=SelectedHotelRoom.htr_Price})"
                         Text="@SelectedHotelRoom.cfg_HTR_Type"
                         ValueChanged="@(async(e)=>OnSelectedRoomTypeChanged(e))"
                         ToStringFunc="@(e=>e==null?"":e.cfg_HTR_Type)"
                         CoerceText="@true"
                         Label=@L["room-type"]
                         Margin="@Margin.Dense" Dense="true" Variant="Variant.Outlined"
                         AdornmentIcon="@Icons.Material.Rounded.KeyboardArrowDown" IconSize="Size.Small" />
                    </MudItem>
                    @* <MudItem sm="5">
                        <MudTextField InputType="InputType.Number" Margin="Margin.Dense" @bind-Value="@SelectedHotelRoom.htr_PriceStrNoFormat" Label="@L["price"]" Variant="Variant.Outlined"/>
                    </MudItem> *@
                    <MudItem sm="5">
                        <MudAutocomplete @ref="FloorAutocomplete" T="HotelFloorInfo" DebounceInterval="ClS_Config.debounce"
                         SearchFunc="@SearchFloorType"
                         Clearable="true"
                         ResetValueOnEmptyText="true"
                         Value="@(new HotelFloorInfo(){htf_FloorID=SelectedHotelRoom.htr_FloorID,htf_FloorName=SelectedHotelRoom.htf_FloorName})"
                         Text="@SelectedHotelRoom.htf_FloorName"
                         ValueChanged="@(async(e)=>OnSelectedFloorName(e))"
                         ToStringFunc="@(e=>e==null?"":e.htf_FloorName)"
                         CoerceText="@true"
                         Label=@L["floor"]
                         Margin="@Margin.Dense" Dense="true" Variant="Variant.Outlined"
                         AdornmentIcon="@Icons.Material.Rounded.KeyboardArrowDown" IconSize="Size.Small" />
                    </MudItem>
                    <MudItem sm="2" Class="pt-2">
                        <MudIconButton Disabled="!SelectedItems.Any()
                        || (SelectedHotelRoom.htr_Type<=0 && SelectedHotelRoom.cfg_HTR_Type.IsStringNullOrWhiteSpace())"
                         OnClick="UpdateRooms" Icon="@Icons.Filled.Save" Color="Color.Primary" Variant="Variant.Filled" DisableElevation></MudIconButton>
                    </MudItem>
                </MudGrid>
                <MudDivider Class="mt-3"/>
                <MudTable SelectedItems="SelectedItems" SelectedItemsChanged="@((e)=>{StateHasChanged();})" T="HotelRoomsInfo" @ref="table" ServerData="@(new Func<TableState,Task<TableData<HotelRoomsInfo>>>(GetPaginatedRooms))" MultiSelection="@(PaginatedRooms.Items.Any())" Elevation="0" Dense="true" Hover="true"
                        CommitEditTooltip="@L["edit"]" RowEditPreview="BackupItem" RowEditCancel="ResetItemToOriginalValues" CanCancelEdit="true"
                        RowEditCommit="@(async(e)=>await ItemHasBeenCommitted(e))" IsEditRowSwitchingBlocked="false" ApplyButtonPosition="@applyButtonPosition" EditButtonPosition="@editButtonPosition" EditTrigger="@editTrigger">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">@L["rooms"]</MudText>
                        <MudSpacer />
                        @* <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField> *@
                    </ToolBarContent>
                    <ColGroup>
                    @if(PaginatedRooms.Items.Any()){
                        @if (applyButtonPosition.DisplayApplyButtonAtStart() || (editButtonPosition.DisplayEditButtonAtStart() && editTrigger == TableEditTrigger.EditButton))
                        {
                            <col style="width:50px;" />
                        }
                        <col style="width:50px;" />
                        <col style="width:50px;" />
                        <col style="width:50px;" />
                        <col />
                        <col />
                        @if (applyButtonPosition.DisplayApplyButtonAtEnd() || (editButtonPosition.DisplayEditButtonAtEnd() && editTrigger == TableEditTrigger.EditButton))
                        {
                            <col style="width:50px;" />
                        }
                    }
                    </ColGroup>
                    <HeaderContent>
                        @if(PaginatedRooms.Items.Any()){
        
         <MudTh>
            <div class="d-flex justify-content-between align-items-center">
                <MudTableSortLabel SortBy="new Func<HotelRoomsInfo, object>(x=>x.htr_Detail.ToEmptyOnNull())">@L["name"]</MudTableSortLabel>
            </div>
        </MudTh>
        <MudTh>
            <div class="d-flex justify-content-between align-items-center">
                <MudTableSortLabel SortBy="new Func<HotelRoomsInfo, object>(x=>x.hrf_FloorName.ToEmptyOnNull())">@L["floor"]</MudTableSortLabel>
            </div>
        </MudTh>

         <MudTh>
            <div class="d-flex justify-content-between align-items-center">
                <MudTableSortLabel SortBy="new Func<HotelRoomsInfo, object>(x=>x.cfg_HTR_Type.ToEmptyOnNull())">@L["type"]</MudTableSortLabel>
            </div>
        </MudTh>

         @* <MudTh>
            <div class="d-flex justify-content-between align-items-center">
                <MudTableSortLabel SortBy="new Func<HotelRoomsInfo, object>(x=>x.htr_Price.ToCurrency())">@L["price"]</MudTableSortLabel>
            </div>
        </MudTh> *@
                        }else{
                                 <div class="mx-3 mb-3 bg-light rounded pa-3 d-flex flex-column justify-center align-center no-data-msg">
                    <MudIcon Size="Size.Large" Color="Color.Warning" Icon="@Icons.Material.Filled.Warning"></MudIcon>
                    <MudText Typo="Typo.body1">@L["no-data-available"]</MudText>
                </div>
                            }

        </HeaderContent>
                    <RowTemplate>
                        @if(PaginatedRooms.Items.Any()){

        <MudTd>@context.htr_Detail</MudTd>
<MudTd>@context.htf_FloorName</MudTd>
<MudTd>@context.cfg_HTR_Type</MudTd>
@* <MudTd>@context.htr_PriceStr</MudTd> *@
                        }

        </RowTemplate>
                    <RowEditingTemplate>
                        @* <MudTd>@context.htr_Detail</MudTd> *@
                        <MudTd Style="width: 20%">
                        <MudTextField Class="dec pa-0" Margin="@Margin.Dense" @bind-Value="@context.htr_Detail" Placeholder="@L["detail"]" Variant="Variant.Outlined"/>
                        </MudTd>
                        <MudTd Style="width: 30%">
                        <MudAutocomplete @ref="InLineFloorAutocomplete" T="HotelFloorInfo" DebounceInterval="ClS_Config.debounce"
                         SearchFunc="@(async(e)=>await SearchFloorTypeInLine(e,context))"
                         Clearable="true"
                         ResetValueOnEmptyText="true"
                         Value="@(new HotelFloorInfo(){htf_FloorID=context.htr_FloorID,htf_FloorName=context.htf_FloorName})"
                         Text="@context.htf_FloorName"
                         ValueChanged="@(async(e)=>InLineOnSelectedFloorName(e,context))"
                         ToStringFunc="@(e=>e==null?"":e.htf_FloorName)"
                         CoerceText="@true"
                         Placeholder=@L["floor"]
                         Margin="@Margin.Dense" Dense="true" Variant="Variant.Outlined"
                         AdornmentIcon="@Icons.Material.Rounded.KeyboardArrowDown" IconSize="Size.Small" />
                         </MudTd>
                       
                        <MudTd Style="width: 30%">
                            <MudAutocomplete @ref="InLineRoomTypeAutocomplete" T="HotelRoomsTypesInfo" DebounceInterval="ClS_Config.debounce"
                         SearchFunc="@SearchRoomType"
                         Clearable="true"
                         ResetValueOnEmptyText="true"
                         Value="@(new HotelRoomsTypesInfo(){cfg_HTR_ID=context.htr_Type,cfg_HTR_Type=context.cfg_HTR_Type,cfg_HTR_Price=context.htr_Price})"
                         Text="@context.cfg_HTR_Type"
                         ValueChanged="@(async(e)=>InLineOnSelectedRoomTypeChanged(e,context))"
                         ToStringFunc="@(e=>e==null?"":e.cfg_HTR_Type)"
                         CoerceText="@true"
                         Placeholder=@L["room-type"]
                         Margin="@Margin.Dense" Dense="true" Variant="Variant.Outlined"
                         AdornmentIcon="@Icons.Material.Rounded.KeyboardArrowDown" IconSize="Size.Small" />
                        </MudTd>
                        @* <MudTd Style="width: 25%">
                            @context.htr_PriceStr
                        </MudTd> *@
                        
                    </RowEditingTemplate>
                    <PagerContent>
                        @* @if(PaginatedRooms.Items.Any()){ *@
        <MudTablePager/>
                        @* } *@
        </PagerContent>
                    <EditButtonContent Context="button">
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" Class="pa-0" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled" />
                        
                    </EditButtonContent>
                </MudTable>
            </MudTabPanel>
            }
        </MudTabs>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(()=>MudDialog.Cancel())" Color="Color.Error" Variant="Variant.Filled" DisableElevation>@L["cancel"]</MudButton>
        @if(SelectedTab==0){
        <MudButton OnClick="@(async()=>await InsertUpdateHotel())" Color="Color.Success" Variant="Variant.Filled" DisableElevation>@L["save"]</MudButton>
        }else if(SelectedTab==1){
        <MudButton Disabled="SelectedHotelUser.htlus_ID<=0" OnClick="@(async()=>await InsertUpdateHotelUser())" Color="Color.Success" Variant="Variant.Filled" DisableElevation>@L["save"]</MudButton>
        }
    </DialogActions>
</MudDialog>

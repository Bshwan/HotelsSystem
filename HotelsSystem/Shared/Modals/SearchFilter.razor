@inject IStringLocalizer<App> L;
<MudDialog ClassActions="px-5 pb-4">
    <DialogContent>
        <div class="row gy-3 gx-2">
                    <div class="col-12 col-md-6 col-lg-4">
                        <MudSelect Margin="@Margin.Dense" T="int" Label="Select" Required Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                            <MudSelectItem T="int" Value="0">Kurdish</MudSelectItem>
                            <MudSelectItem T="int" Value="1">Arabic</MudSelectItem>
                            <MudSelectItem T="int" Value="2">English</MudSelectItem>
                        </MudSelect>                    </div>
                    <div class="col-12 col-md-6 col-lg-4">
                        <MudDatePicker Margin="Margin.Dense" Label="Date" @bind-Date="date" Variant="Variant.Outlined"/>
                    </div>
                    <div class="col-12 col-md-6 col-lg-4">
                        <MudAutocomplete Clearable T="string" Label="Auto Complete" @bind-Value="value1" SearchFunc="@Search1" Margin="@Margin.Dense" Dense="true" Variant="Variant.Outlined"/>
                    </div>
                    <div class="col-12 col-md-6 col-lg-4">
                        <MudNumericField Required Margin="@Margin.Dense" @bind-Value="TextValue" Label="Number Field" Variant="Variant.Outlined"></MudNumericField >
                    </div>
                    <div class="col-12 col-md-6 col-lg-4">
                        <MudTextField Margin="@Margin.Dense" @bind-Value="TextValue" Label="Text Field" Variant="Variant.Outlined"></MudTextField>
                    </div>
                    <div class="col-12 col-md-6 col-lg-4">
                        <MudField Class="dense-true" Label="Radio" Margin="@Margin.Dense" Variant="Variant.Outlined">
                            <MudRadioGroup Class="px-2" @bind-SelectedOption="Dense_Radio">
                                <MudRadio Option="true" Color="Color.Primary" Dense="true" Size="Size.Small">Dense</MudRadio>
                                <MudRadio Option="false" Color="Color.Primary" Dense="true" Size="Size.Small">Dense</MudRadio>
                            </MudRadioGroup>
                        </MudField>
                    </div>
                    <div class="col-12">
                        <MudDivider/>
                    </div>
                </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">@L["cancel"]</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">@L["save"]</MudButton>
    </DialogActions>
</MudDialog>

@code{
    DateTime? date = DateTime.Today;
    public bool Dense_Radio { get; set; } = true;
    public string TextValue { get; set; }
    private string value1;
    private string[] states = {
        "Alabama", "Alaska", "American Samoa", "Arizona",
        "Arkansas", "California", "Colorado", "Connecticut",
        "Delaware", "District of Columbia", "Federated States of Micronesia",
        "Florida", "Georgia", "Guam", "Hawaii", "Idaho",
        "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky",
        "Louisiana", "Maine", "Marshall Islands", "Maryland",
        "Massachusetts", "Michigan", "Minnesota", "Mississippi",
        "Missouri", "Montana", "Nebraska", "Nevada",
        "New Hampshire", "New Jersey", "New Mexico", "New York",
        "North Carolina", "North Dakota", "Northern Mariana Islands", "Ohio",
        "Oklahoma", "Oregon", "Palau", "Pennsylvania", "Puerto Rico",
        "Rhode Island", "South Carolina", "South Dakota", "Tennessee",
        "Texas", "Utah", "Vermont", "Virgin Island", "Virginia",
        "Washington", "West Virginia", "Wisconsin", "Wyoming",
    };
    private async Task<IEnumerable<string>> Search1(string value) {
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);

        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value))
            return states;
        return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();
}
@inject IStringLocalizer<App> L;

<MudDialog ClassActions="px-5 pb-4">
    <DialogContent>
        @if (config != null)
        {

            <div class="row gy-3 gx-2">
                <MudForm @ref="NameForm">
                    <div class="col-12 d-flex align-items-center">
                        <MudTextField Required="true" Margin="@Margin.Dense" ErrorText="@L["required"]" Dense="true" @bind-Value="SelectedGroup.group_Name" Label="@L["name"]" Variant="Variant.Outlined"></MudTextField>
                    </div>
                </MudForm>
                @if (SelectedGroup.group_ID > 0)
                {
                    <MudForm @ref="PermissionForm">

                        <div class="col-12 d-flex align-items-center">
                            <MudAutocomplete T="PermissionsPerGroups" DebounceInterval="ClS_Config.debounce"
                                     SearchFunc="@SearchPermission"
                                     Clearable="true"
                                     Required="true"
                                     ResetValueOnEmptyText="true"
                                     Value="@(new PermissionsPerGroups(){peo_DataRole=SelectedPermission.peo_DataRole,peo_DataRoleID=SelectedPermission.peo_DataRoleID})"
                                     Text="@SelectedPermission.peo_DataRole"
                                     Validation="@(new Func<PermissionsPerGroups, string>((e)=>e.ValidateField<PermissionsPerGroups>("peo_DataRoleID")))"
                                     ValueChanged="@((e)=>OnPermissionChanged(e))"
                                     ToStringFunc="@(e=>e==null?"":e.peo_DataRole)"
                                     CoerceText="@true"
                                     Label=@L["privilege"]
                                     Margin="@Margin.Dense" Dense="true" Variant="Variant.Outlined"
                                     AdornmentIcon="@Icons.Material.Rounded.KeyboardArrowDown" IconSize="Size.Small" />

                            <MudIconButton Class="ms-2 square-btn" @onclick="@(async()=> await InsertPermission())" Icon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Color="Color.Primary" />
                        </div>
                    </MudForm>
                    <div class="col-12">
                        <MudField Label="@L["privileges"]" Margin="@Margin.Dense" Variant="Variant.Outlined">
                            @*<MudIconButton Class="ms-2 square-btn" Icon="@Icons.Material.Filled.Add" Variant="Variant.Text" Color="Color.Primary"/>*@
                        @foreach (var per in combo.Where(x=>x.HasRole==1))
                        {
                                <MudChip Icon="@Icons.Filled.Close" @onclick="@(async()=> await DeletePermission(per.per_ID))" Variant="Variant.Text" Color="Color.Primary">@per.peo_DataRole</MudChip>
                        }
                            </MudField>
                            @*<MudIconButton Class="ms-2 square-btn" @onclick="@(async()=> await InsertPermission())" Icon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Color="Color.Primary" />*@
                    </div>



                }

                <div class="col-12">
                    <MudDivider />

                </div>
            </div>
        }

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Close</MudButton>
        <MudButton Color="Color.Primary" OnClick="@(async()=>await InsertUpdateGroup())">Save</MudButton>
    </DialogActions>
</MudDialog>
